name: Build and Push Docker Images

on:
  push:
    tags:
      - 'v*'  # 当推送以 v 开头的标签时触发工作流
  workflow_dispatch: # 添加手动触发
    inputs:
      tag_to_build:
        description: 'The existing tag to build (e.g., v1.0.0). Must be an existing tag.'
        required: true
        type: string

env:
  REGISTRY: registry.cn-qingdao.aliyuncs.com
  REPOSITORY: zerosignal/packet-analysis-tool

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
    steps:
      - name: Determine tag to checkout
        id: determine_tag
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "TAG_REF=refs/tags/${{ github.event.inputs.tag_to_build }}" >> $GITHUB_OUTPUT
            echo "RAW_TAG_NAME=${{ github.event.inputs.tag_to_build }}" >> $GITHUB_OUTPUT
          else
            echo "TAG_REF=${{ github.ref }}" >> $GITHUB_OUTPUT
            echo "RAW_TAG_NAME=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          fi

      - name: Checkout code for specific tag
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.determine_tag.outputs.TAG_REF }} # Checkout the specified tag
          # fetch-depth: 0 # uncomment if you need full history or other tags

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Aliyun Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.ALIYUN_DOCKER_USERNAME }}
          password: ${{ secrets.ALIYUN_DOCKER_PASSWORD }}

      - name: Extract version from tag name
        id: version_extractor
        run: |
          # RAW_TAG_NAME will be like 'v1.0.0'
          RAW_TAG_NAME_FROM_STEP="${{ steps.determine_tag.outputs.RAW_TAG_NAME }}"
          echo "VERSION=${RAW_TAG_NAME_FROM_STEP}" >> $GITHUB_OUTPUT
          echo "Building for tag: ${RAW_TAG_NAME_FROM_STEP}"

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ matrix.platform }}
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ steps.version_extractor.outputs.VERSION }}
            ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:latest  # Consider if 'latest' should only be for actual new releases
          cache-from: type=gha
          cache-to: type=gha,mode=max
